package com.casecade;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.mappings.Answers;
import com.mappings.Questions;

public class CasecadingExample {
	public static void main(String[] args) {
		Configuration cfg=new Configuration();
		cfg.configure();
		SessionFactory factory=cfg.buildSessionFactory();
		Session session=factory.openSession();
		Transaction tx=session.beginTransaction();
		Questions q1=new Questions();
		q1.setId(102);
		q1.setQuestion("What is casecading in Hibernate?");
		
		Answers a1=new Answers();
		a1.setId(204);
		a1.setAnswer("Casecading is very important in Hibernate");
		
		Answers a2=new Answers();
		a2.setId(205);
		a2.setAnswer("Casecading is very important in Hibernate");
		
		Answers a3=new Answers();
		a3.setId(206);
		a3.setAnswer("Casecading is very important in Hibernate");
		
		List<Answers> l=new ArrayList<>();
		l.add(a1);
		l.add(a2);
		l.add(a3);
		q1.setAnswer(l);
		
		session.save(q1);//after change the CascadeType.All then reflect the all change when questions is modifiied
		//without using cascading only save the question not assiated answer
//		session.save(a1);//saving answers manually one by one
//		session.save(a2);//saving answers manually      "
//		session.save(a3);//saving answers manually      "
		
		tx.commit();
		session.close();
		factory.close();
	}
}
