/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-09-01 12:21:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>Contact Management System || Login page</title>\r\n");
      out.write("<!-- Tailwind CSS CDN -->\r\n");
      out.write("<script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div\r\n");
      out.write("		class=\"min-h-screen bg-gradient-to-br from-blue-500 via-purple-600 to-pink-500 flex items-center justify-center p-4\">\r\n");
      out.write("\r\n");
      out.write("		<!-- Card -->\r\n");
      out.write("		<div\r\n");
      out.write("			class=\"w-full max-w-md bg-white/95 backdrop-blur rounded-2xl shadow-xl p-8\">\r\n");
      out.write("			<div class=\"text-center mb-6\">\r\n");
      out.write("				<h1 class=\"mt-3 text-2xl font-bold text-gray-800\">Welcome back</h1>\r\n");
      out.write("				<p class=\"text-sm text-gray-500\">Sign in to manage your contacts</p>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- Alert (optional, show on server error) -->\r\n");
      out.write("			<!-- <div class=\"mb-4 rounded-lg bg-red-50 border border-red-200 text-red-700 px-4 py-2 text-sm\">Invalid email or password.</div> -->\r\n");
      out.write("\r\n");
      out.write("			<form id=\"login\" action=\"Login\" method=\"post\"\r\n");
      out.write("				class=\"space-y-4\">\r\n");
      out.write("				<!-- Email -->\r\n");
      out.write("				<div>\r\n");
      out.write("					<label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n");
      out.write("					<input type=\"email\" id=\"email\" name=\"email\" required\r\n");
      out.write("						autocomplete=\"email\"\r\n");
      out.write("						class=\"mt-1 w-full rounded-lg border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n");
      out.write("						placeholder=\"you@example.com\" />\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<!-- Password -->\r\n");
      out.write("				<div>\r\n");
      out.write("					<label for=\"password\"\r\n");
      out.write("						class=\"block text-sm font-medium text-gray-700\">Password</label>\r\n");
      out.write("					<div class=\"relative mt-1\">\r\n");
      out.write("						<input type=\"password\" id=\"password\" name=\"password\" required\r\n");
      out.write("							autocomplete=\"current-password\"\r\n");
      out.write("							class=\"w-full rounded-lg border border-gray-300 px-4 py-2 pr-12 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n");
      out.write("							placeholder=\"â¢â¢â¢â¢â¢â¢â¢â¢\" />\r\n");
      out.write("						<button type=\"button\" id=\"togglePwd\"\r\n");
      out.write("							class=\"absolute inset-y-0 right-2 my-auto text-gray-500 text-sm px-2 rounded hover:bg-gray-100\">\r\n");
      out.write("							Show</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<!-- Submit -->\r\n");
      out.write("				<button id=\"submitBtn\" type=\"submit\"\r\n");
      out.write("					class=\"w-full rounded-lg bg-blue-600 text-white font-semibold py-2 hover:bg-blue-700 transition\">\r\n");
      out.write("					Sign in</button>\r\n");
      out.write("			</form>\r\n");
      out.write("\r\n");
      out.write("			<!-- Register link -->\r\n");
      out.write("			<p class=\"mt-6 text-center text-sm text-gray-600\">\r\n");
      out.write("				New here? <a href=\"register.jsp\"\r\n");
      out.write("					class=\"text-blue-600 font-medium hover:underline\">Create an\r\n");
      out.write("					account</a>\r\n");
      out.write("			</p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Tiny JS: client checks + toggle password -->\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("  // Password toggle\r\n");
      out.write("  const toggle = document.getElementById('togglePwd');\r\n");
      out.write("  const pwd = document.getElementById('password');\r\n");
      out.write("  toggle.addEventListener('click', () => {\r\n");
      out.write("    const isHidden = pwd.type === 'password';\r\n");
      out.write("    pwd.type = isHidden ? 'text' : 'password';\r\n");
      out.write("    toggle.textContent = isHidden ? 'Hide' : 'Show';\r\n");
      out.write("  });\r\n");
      out.write("\r\n");
      out.write("  // AJAX Login\r\n");
      out.write("  $('#login').on('submit', function(event){\r\n");
      out.write("	event.preventDefault();\r\n");
      out.write("    let email = $('#email').val().trim();\r\n");
      out.write("    let password = $('#password').val().trim();\r\n");
      out.write("    $('#submitBtn').html(\"<i class='fa fa-spinner fa-spin'></i>\");\r\n");
      out.write("\r\n");
      out.write("    if (!email || !password) {\r\n");
      out.write("      alert('Please enter both email and password.');\r\n");
      out.write("      return;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("      url: '");
      out.print(request.getContextPath());
      out.write("/Login',\r\n");
      out.write("      type: 'POST',\r\n");
      out.write("      data: { email: email, password: password },\r\n");
      out.write("      success: function(data){\r\n");
      out.write("        if(data.trim() == \"true\"){\r\n");
      out.write("          alert(\"Login successfully!\");\r\n");
      out.write("          $('#submitBtn').text(\"Sign in'\")\r\n");
      out.write("          window.location.href = \"index.jsp\";\r\n");
      out.write("        } else {\r\n");
      out.write("        	$('#submitBtn').text(\"Sign in'\")\r\n");
      out.write("          alert(\"Invalid credentials user not found!\");\r\n");
      out.write("        }\r\n");
      out.write("      },\r\n");
      out.write("      error: function(){\r\n");
      out.write("        alert(\"Something went wrong!\");\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
